{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/cart\";\nclass CartService {\n  // 獲取購物車內容\n  // getCart() {\n  //   let token;\n  //   if (localStorage.getItem(\"user\")) {\n  //     token = JSON.parse(localStorage.getItem(\"user\")).token;\n  //   } else {\n  //     token = \"\";\n  //   }\n\n  //   return axios.get(API_URL, {\n  //     headers: {\n  //       Authorization: token,\n  //     },\n  //   });\n  // }\n\n  // 添加商品到購物車\n  addToCart(userID, beanID) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    console.log(\"3.request\", {\n      userID,\n      beanID,\n      token\n    });\n    try {\n      return axios.post(API_URL, {\n        userID,\n        beanID\n      },\n      // 只需要傳送 beanID\n      {\n        headers: {\n          Authorization: user.token // token 會包含用戶信息\n        }\n      });\n    } catch (e) {\n      console.error(\"Add to cart error:\", e);\n      throw e;\n    }\n  }\n\n  // 更新購物車商品數量\n  updateQuantity(productId, quantity) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL + `/update/${productId}`, {\n      quantity\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  // 從購物車移除商品\n  removeFromCart(productId) {\n    const token = localStorage.getItem(\"token\");\n    return axios.delete(API_URL + `/remove/${productId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  // 清空購物車\n  clearCart() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + \"/clear\", {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n}\nexport default new CartService();","map":{"version":3,"names":["axios","API_URL","CartService","addToCart","userID","beanID","token","localStorage","getItem","JSON","parse","console","log","post","headers","Authorization","user","e","error","updateQuantity","productId","quantity","put","removeFromCart","delete","clearCart"],"sources":["/Users/linkunhan/Desktop/my-project/frontend/src/services/cart-service.js"],"sourcesContent":["import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/cart\";\n\nclass CartService {\n  // 獲取購物車內容\n  // getCart() {\n  //   let token;\n  //   if (localStorage.getItem(\"user\")) {\n  //     token = JSON.parse(localStorage.getItem(\"user\")).token;\n  //   } else {\n  //     token = \"\";\n  //   }\n\n  //   return axios.get(API_URL, {\n  //     headers: {\n  //       Authorization: token,\n  //     },\n  //   });\n  // }\n\n  // 添加商品到購物車\n  addToCart(userID, beanID) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    console.log(\"3.request\", { userID, beanID, token });\n\n    try {\n      return axios.post(\n        API_URL,\n        { userID, beanID }, // 只需要傳送 beanID\n        {\n          headers: {\n            Authorization: user.token, // token 會包含用戶信息\n          },\n        }\n      );\n    } catch (e) {\n      console.error(\"Add to cart error:\", e);\n      throw e;\n    }\n  }\n\n  // 更新購物車商品數量\n  updateQuantity(productId, quantity) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.put(\n      API_URL + `/update/${productId}`,\n      { quantity },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n\n  // 從購物車移除商品\n  removeFromCart(productId) {\n    const token = localStorage.getItem(\"token\");\n\n    return axios.delete(API_URL + `/remove/${productId}`, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n\n  // 清空購物車\n  clearCart() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.delete(API_URL + \"/clear\", {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n}\n\nexport default new CartService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,MAAMC,WAAW,CAAC;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAE;IACxB,IAAIC,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IACAK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;MAAER,MAAM;MAAEC,MAAM;MAAEC;IAAM,CAAC,CAAC;IAEnD,IAAI;MACF,OAAON,KAAK,CAACa,IAAI,CACfZ,OAAO,EACP;QAAEG,MAAM;QAAEC;MAAO,CAAC;MAAE;MACpB;QACES,OAAO,EAAE;UACPC,aAAa,EAAEC,IAAI,CAACV,KAAK,CAAE;QAC7B;MACF,CACF,CAAC;IACH,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVN,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAED,CAAC,CAAC;MACtC,MAAMA,CAAC;IACT;EACF;;EAEA;EACAE,cAAcA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IAClC,IAAIf,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IAEA,OAAON,KAAK,CAACsB,GAAG,CACdrB,OAAO,GAAG,WAAWmB,SAAS,EAAE,EAChC;MAAEC;IAAS,CAAC,EACZ;MACEP,OAAO,EAAE;QACPC,aAAa,EAAET;MACjB;IACF,CACF,CAAC;EACH;;EAEA;EACAiB,cAAcA,CAACH,SAAS,EAAE;IACxB,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,OAAOR,KAAK,CAACwB,MAAM,CAACvB,OAAO,GAAG,WAAWmB,SAAS,EAAE,EAAE;MACpDN,OAAO,EAAE;QACPC,aAAa,EAAET;MACjB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAmB,SAASA,CAAA,EAAG;IACV,IAAInB,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IAEA,OAAON,KAAK,CAACwB,MAAM,CAACvB,OAAO,GAAG,QAAQ,EAAE;MACtCa,OAAO,EAAE;QACPC,aAAa,EAAET;MACjB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIJ,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}