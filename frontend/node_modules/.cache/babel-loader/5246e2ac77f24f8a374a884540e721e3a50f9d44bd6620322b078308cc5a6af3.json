{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/articles\";\nclass ArticleService {\n  // 獲取所有文章\n  getAllArticles() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  // 獲取單篇文章\n  getArticle(id) {\n    return axios.get(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n  }\n\n  // 發表新文章\n  postArticle(articleData) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, articleData, {\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n\n  // 發表評論\n  postComment(articleId, commentData) {\n    return axios.post(`${API_URL}/${articleId}/comment`, commentData, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n  }\n\n  // 更新文章\n  updateArticle(id, updateData) {\n    return axios.patch(`${API_URL}/${id}`, updateData, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n  }\n\n  // 刪除文章\n  deleteArticle(id) {\n    return axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n  }\n}\nexport default new ArticleService();","map":{"version":3,"names":["axios","API_URL","ArticleService","getAllArticles","token","localStorage","getItem","JSON","parse","get","headers","Authorization","getArticle","id","postArticle","articleData","post","postComment","articleId","commentData","updateArticle","updateData","patch","deleteArticle","delete"],"sources":["/Users/linkunhan/Desktop/my-project/frontend/src/services/article-service.js"],"sourcesContent":["import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/articles\";\n\nclass ArticleService {\n  // 獲取所有文章\n  getAllArticles() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n\n  // 獲取單篇文章\n  getArticle(id) {\n    return axios.get(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    });\n  }\n\n  // 發表新文章\n  postArticle(articleData) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, articleData, {\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  // 發表評論\n  postComment(articleId, commentData) {\n    return axios.post(`${API_URL}/${articleId}/comment`, commentData, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    });\n  }\n\n  // 更新文章\n  updateArticle(id, updateData) {\n    return axios.patch(`${API_URL}/${id}`, updateData, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    });\n  }\n\n  // 刪除文章\n  deleteArticle(id) {\n    return axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    });\n  }\n}\n\nexport default new ArticleService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,cAAc,CAAC;EACnB;EACAC,cAAcA,CAAA,EAAG;IACf,IAAIC,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IACA,OAAOJ,KAAK,CAACS,GAAG,CAACR,OAAO,EAAE;MACxBS,OAAO,EAAE;QACPC,aAAa,EAAEP;MACjB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAQ,UAAUA,CAACC,EAAE,EAAE;IACb,OAAOb,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,IAAIY,EAAE,EAAE,EAAE;MACnCH,OAAO,EAAE;QACPC,aAAa,EAAEN,YAAY,CAACC,OAAO,CAAC,OAAO;MAC7C;IACF,CAAC,CAAC;EACJ;;EAEA;EACAQ,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAIX,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IACA,OAAOJ,KAAK,CAACgB,IAAI,CAACf,OAAO,EAAEc,WAAW,EAAE;MACtCL,OAAO,EAAE;QACPC,aAAa,EAAEP,KAAK;QACpB,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAa,WAAWA,CAACC,SAAS,EAAEC,WAAW,EAAE;IAClC,OAAOnB,KAAK,CAACgB,IAAI,CAAC,GAAGf,OAAO,IAAIiB,SAAS,UAAU,EAAEC,WAAW,EAAE;MAChET,OAAO,EAAE;QACPC,aAAa,EAAEN,YAAY,CAACC,OAAO,CAAC,OAAO;MAC7C;IACF,CAAC,CAAC;EACJ;;EAEA;EACAc,aAAaA,CAACP,EAAE,EAAEQ,UAAU,EAAE;IAC5B,OAAOrB,KAAK,CAACsB,KAAK,CAAC,GAAGrB,OAAO,IAAIY,EAAE,EAAE,EAAEQ,UAAU,EAAE;MACjDX,OAAO,EAAE;QACPC,aAAa,EAAEN,YAAY,CAACC,OAAO,CAAC,OAAO;MAC7C;IACF,CAAC,CAAC;EACJ;;EAEA;EACAiB,aAAaA,CAACV,EAAE,EAAE;IAChB,OAAOb,KAAK,CAACwB,MAAM,CAAC,GAAGvB,OAAO,IAAIY,EAAE,EAAE,EAAE;MACtCH,OAAO,EAAE;QACPC,aAAa,EAAEN,YAAY,CAACC,OAAO,CAAC,OAAO;MAC7C;IACF,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIJ,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}