{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/cart\";\nclass CartService {\n  authenticate() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n  }\n  // 獲取購物車內容\n  getCart() {\n    authenticate();\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  // 添加商品到購物車\n  addToCart(beanID) {\n    authenticate();\n    try {\n      return axios.post(API_URL, {\n        beanID\n      },\n      // 只需要傳送 beanID\n      {\n        headers: {\n          Authorization: token // token 會包含用戶信息\n        }\n      });\n    } catch (e) {\n      console.error(\"Add to cart error:\", e);\n      throw e;\n    }\n  }\n\n  // 更新購物車商品數量\n  updateQuantity(productId, quantity) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.put(API_URL + `/update/${productId}`, {\n      quantity\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  // 從購物車移除商品\n  removeFromCart(productId) {\n    const token = localStorage.getItem(\"token\");\n    return axios.delete(API_URL + `/remove/${productId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n\n  // 清空購物車\n  clearCart() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.delete(API_URL + \"/clear\", {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n}\nexport default new CartService();","map":{"version":3,"names":["axios","API_URL","CartService","authenticate","token","localStorage","getItem","JSON","parse","getCart","get","headers","Authorization","addToCart","beanID","post","e","console","error","updateQuantity","productId","quantity","put","removeFromCart","delete","clearCart"],"sources":["/Users/linkunhan/Desktop/my-project/frontend/src/services/cart-service.js"],"sourcesContent":["import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/cart\";\n\nclass CartService {\n  authenticate() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n  }\n  // 獲取購物車內容\n  getCart() {\n    authenticate();\n\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n\n  // 添加商品到購物車\n  addToCart(beanID) {\n    authenticate();\n\n    try {\n      return axios.post(\n        API_URL,\n        { beanID }, // 只需要傳送 beanID\n        {\n          headers: {\n            Authorization: token, // token 會包含用戶信息\n          },\n        }\n      );\n    } catch (e) {\n      console.error(\"Add to cart error:\", e);\n      throw e;\n    }\n  }\n\n  // 更新購物車商品數量\n  updateQuantity(productId, quantity) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.put(\n      API_URL + `/update/${productId}`,\n      { quantity },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n  }\n\n  // 從購物車移除商品\n  removeFromCart(productId) {\n    const token = localStorage.getItem(\"token\");\n\n    return axios.delete(API_URL + `/remove/${productId}`, {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n\n  // 清空購物車\n  clearCart() {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n\n    return axios.delete(API_URL + \"/clear\", {\n      headers: {\n        Authorization: token,\n      },\n    });\n  }\n}\n\nexport default new CartService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,MAAMC,WAAW,CAAC;EAChBC,YAAYA,CAAA,EAAG;IACb,IAAIC,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;EACF;EACA;EACAK,OAAOA,CAAA,EAAG;IACRN,YAAY,CAAC,CAAC;IAEd,OAAOH,KAAK,CAACU,GAAG,CAACT,OAAO,EAAE;MACxBU,OAAO,EAAE;QACPC,aAAa,EAAER;MACjB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAS,SAASA,CAACC,MAAM,EAAE;IAChBX,YAAY,CAAC,CAAC;IAEd,IAAI;MACF,OAAOH,KAAK,CAACe,IAAI,CACfd,OAAO,EACP;QAAEa;MAAO,CAAC;MAAE;MACZ;QACEH,OAAO,EAAE;UACPC,aAAa,EAAER,KAAK,CAAE;QACxB;MACF,CACF,CAAC;IACH,CAAC,CAAC,OAAOY,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,CAAC,CAAC;MACtC,MAAMA,CAAC;IACT;EACF;;EAEA;EACAG,cAAcA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IAClC,IAAIjB,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IAEA,OAAOJ,KAAK,CAACsB,GAAG,CACdrB,OAAO,GAAG,WAAWmB,SAAS,EAAE,EAChC;MAAEC;IAAS,CAAC,EACZ;MACEV,OAAO,EAAE;QACPC,aAAa,EAAER;MACjB;IACF,CACF,CAAC;EACH;;EAEA;EACAmB,cAAcA,CAACH,SAAS,EAAE;IACxB,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,OAAON,KAAK,CAACwB,MAAM,CAACvB,OAAO,GAAG,WAAWmB,SAAS,EAAE,EAAE;MACpDT,OAAO,EAAE;QACPC,aAAa,EAAER;MACjB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAqB,SAASA,CAAA,EAAG;IACV,IAAIrB,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IAEA,OAAOJ,KAAK,CAACwB,MAAM,CAACvB,OAAO,GAAG,QAAQ,EAAE;MACtCU,OAAO,EAAE;QACPC,aAAa,EAAER;MACjB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIF,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}